name: OpenCraftShop CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Validate Python syntax
      run: |
        python -m py_compile src/*.py
        echo "✓ Python syntax validation passed"
    
    - name: Validate JSON files
      run: |
        for file in config/*.json; do
          python -m json.tool "$file" > /dev/null
        done
        echo "✓ JSON validation passed"
    
    - name: Build Docker image
      run: |
        docker-compose build
        echo "✓ Docker build successful"
    
    - name: Run quick test
      run: |
        docker-compose run --rm opencraftshop --type workbench --no-visualize
        echo "✓ Quick test passed"
    
    - name: Check generated files
      run: |
        ls -la output/
        test -f output/workbench.stl
        test -f output/cut_list.txt
        test -f output/shopping_list.txt
        echo "✓ All expected files generated"
    
    - name: Upload test results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: test-outputs
        path: output/
    
    - name: Create test summary
      if: always()
      run: |
        echo "## Test Summary" >> $GITHUB_STEP_SUMMARY
        echo "- Python validation: ✅" >> $GITHUB_STEP_SUMMARY
        echo "- JSON validation: ✅" >> $GITHUB_STEP_SUMMARY
        echo "- Docker build: ✅" >> $GITHUB_STEP_SUMMARY
        echo "- File generation: ✅" >> $GITHUB_STEP_SUMMARY

  lint:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Install linting tools
      run: |
        pip install flake8 black
    
    - name: Run flake8
      run: |
        flake8 src/ --max-line-length=120 --ignore=E501,W503
      continue-on-error: true
    
    - name: Check black formatting
      run: |
        black --check src/
      continue-on-error: true